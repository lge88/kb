#! /usr/bin/env bash

function usage {
  cat <<EOF
Usage: $0 <problem_number> <problem_name>
Example:
$0 200 number-of-islands
EOF
}

if [[ $# != 2 ]]; then
  usage
  exit 1
fi

problem_number=$1
problem_name=$2

dest_dir="$problem_number-$problem_name"
dest_file="$dest_dir/$problem_name.cc"

mkdir -p $dest_dir

cat <<'BOILERPLATE_EOF' >$dest_file
#include <iostream>
#include <fstream>
#include <sstream>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <iterator>
#include <algorithm>

using namespace std;

class Solution {
 public:
  int solve(int x) {
    return x;
  }
};

void test(int x) {
  Solution sol;
  cout << "x: " << x << "\n";
  cout << "result: " << sol.solve(x) << "\n";
}

int main(int argc, char* argv[]) {
  {
    int x = 42;
    test(x);
  }
  return 0;
}
BOILERPLATE_EOF

cat <<GITIGNORE_EOF >$dest_dir/.gitignore
$problem_name
*.dSYM
GITIGNORE_EOF

cat <<MAKEFILE_EOF >$dest_dir/Makefile
run: $problem_name
	./$problem_name

$problem_name: $problem_name.cc
	g++ -std=c++11 -g \$^ -o \$@

clean:
	rm -fr $problem_name *.o *.dSYM
MAKEFILE_EOF

cat <<README_EOF >$dest_dir/README.md
# $problem_name
README_EOF

(cd $dest_dir; pwd; make)
