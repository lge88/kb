#! /usr/bin/env bash

function usage {
  cat <<EOF
Usage: $0 <project>
Example:
$0 c11-lambda
EOF
}

if [[ $# != 1 ]]; then
  usage
  exit 1
fi

proj_name="${1}"
dest_dir="${1}"
dest_file="${dest_dir}/${proj_name}.cc"

mkdir -p $dest_dir

cat <<'BOILERPLATE_EOF' >$dest_file
#include <algorithm>
#include <cassert>
#include <cstdlib>
#include <fstream>
#include <iostream>
#include <iterator>
#include <map>
#include <set>
#include <sstream>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <vector>

using namespace std;

int main(int argc, char* argv[]) {
  cout << "argc: " << argc << "\n";
  for (int i = 0; i < argc; ++i) {
    cout << "[" << i << "]: " << argv[i] << "\n";
  }
  return 0;
}
BOILERPLATE_EOF

cat <<GITIGNORE_EOF >$dest_dir/.gitignore
$proj_name
*.o
*.dSYM
GITIGNORE_EOF

cat <<MAKEFILE_EOF >$dest_dir/Makefile
run: $proj_name
	./$proj_name

$proj_name: $proj_name.cc
	g++ -std=c++11 -g \$^ -o \$@

clean:
	rm -fr $proj_name *.o *.dSYM
MAKEFILE_EOF

cat <<README_EOF >$dest_dir/README.md
# $proj_name
README_EOF

(cd $dest_dir; pwd; make)
